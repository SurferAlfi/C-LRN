using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*
            Console.WriteLine("Hello World!");
            Console.ReadLine(); 
            */

            //Névkiírás
            /*
            Console.WriteLine("Kérem a nevet: "); //Nevet kérsz
            string name = Console.ReadLine(); //Beolvassa a Console
            Console.WriteLine("Köszönöm {0}!", name); //Kiírja a Console
            */

            //Tájékoztatás, Adatbekérés
            /*
            Console.WriteLine("Helló, kérlek add meg a nevedet:");
            string name = Console.ReadLine(); //Itt megáll, megvárja, amíg begépelsz valamit. Name nevű változóba menti, amit kapott.
            Console.WriteLine("Kérlek add meg a születési dátumodat, a következő formában:");
            Console.WriteLine("[ÉÉÉÉ.HH.NN]");
            DateTime birth = DateTime.Parse(Console.ReadLine()); //Dátumot tárol. Parse: konzolról minden, amit beolvasunk, string érték lesz, amit dátummá kell alakítani.
            Console.WriteLine("Köszönöm!");

            double age = DateTime.Now.Subtract(birth).Days / 365.25; //Dátum kivonása. Mai nap: DateTime.Now, ebből a .Subtract(birth) művelet kivonja a szülinapi időpontot, és a .Days kiolvassa az azóta eltelt napok számát. Ha elosztod 365.25-tel, megkapod az eltelt évek számát.
            Console.WriteLine(String.Format("Szia {0}, te {1} éves vagy.", name, (int)age)); //String.Format() metódus a legjobb, hogy szöveget kezelj. Leírod a szöveges közlendőt, majd kapcsos zárók közé mehet az argumentum. (int)age: Maradhatott volna csak age, de így eltűnik a tizedesveszző.
            Console.ReadLine(); 
            */

            //ELÁGAZÁS
            /*
            if (true)
            {
                System.Console.WriteLine("Hello!"); //Elágazás akkor kell, mikor egy vagy több parancs futása feltételhez kötődik. Ez itt fixen lefut, mert az if után a feltétel értéke true. Ha false lenne nem futna le.
            } 
            */

            /*
            int x = int.Parse(Console.ReadLine()); // Beolvas egy stringet a consoleról, majd int számmá alakítja.  

            if(x>0)
            {
                Console.WriteLine("Ez egy pozitív szám");
            }
            else //Különben blokk: Csak akkor fut le, ha a felette lévő if nem futott le. 
            {
                Console.WriteLine("Ez a szám nem pozitív");
            }

            Console.ReadLine();
            */

            //NEGÁLÁS (Egy logikai változó ellentéte. ! a változó neve elé.)
            /*
            bool isJoffreyKing = true;
            bool isBaratheonKing = !isJoffreyKing;
            */

            //ÉS: && (Akkor ad vissza igaz értéket, ha minden operandusa igaz.)
            /*
            bool smellsDrunk = true;
            bool movesUnsecure = true;
            bool hasAGun = false;

            bool risky = smellsDrunk && movesUnsecure;
            bool dangerous = smellsDrunk && movesUnsecure && hasAGun;

            if (risky)
            {
                KickOut();
            }
            if (dangerous)
            {
                CallPolice();
            }
            */

            //Vagy || (Akkor ad vissza igaz értéket, ha valamely operandusa igaz.)
            /*
            bool suspicious = smellsDrunk || movesUnsecure || hasAGun;
            */

            //CIKLUSOK: Valamilyen utasítás vagy utasítások egy bizonoys feltételtől függően ismétlődnek.(Ellenőrzik a futási feltételt, ha az zöld utat ad, lefuttatják a ciklusmagbeli utasításokat.)
            //1. Számláló Ciklus: for (addig futnak a magban az utasítások, számláló változó nagysága el nem éri a megadott határértéket.)
            //Helyes for ciklusnak tartalmaznia kell:
                //Iterációs változó: i úgynevezett számláló változó, deklarálás: (int i = 0) amivel ellenőrizheted, meddig fut a ciklus. 
                //Futási feltétel: i < 10 amíg ennek a feltételnek az értéke igaz, addig futhatnak a ciklusmagban kiadott parancsok.
                //Iterációs lépések: i++. Itt kell meghatározni azt, mennyivel növekedjen a ciklusváltozó egy-egy lépésben. Az i++ utasítás eggyel növel, az i-- eggyel csökkent.
            /*
            for(int i = 0; i < 10; i++)
            {
                Console.WriteLine("Akkor is igazam van!"); //Ez 10x kiíratja
            }
            */

            /*
            for(int i = 0; i < 10; i+=2)
            {
                Console.WriteLine(i); //Páros számikat írja ki, 0 - 10 között.
            }
            */

            //2. Elöltesztelő ciklus: while 


        }
    }
}

- - - - - - - - - - - - - - 

namespace Suli
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Név Plz");
            string nev = Console.ReadLine();
            Console.WriteLine("Szoszi, {0}", nev);
            
        }
    }
}
            - - -
            int hossz = 45;
            Console.Write("A négyzet kerülete: ");
            Console.WriteLine(4 * hossz);
            Console.WriteLine("A {0} oldalú négyzet területe {1}", hossz, hossz * hossz); 
            - - - 
            
            - - -
            int szülév = 1994;
            Console.WriteLine("{0}-ban/ben születtem.\n Most {1} éves vagyok.", szülév, 2022 - szülév);
            - - -
            
            - - -
            int r;
            string sugar;
            Console.WriteLine("Adja meg  akör sugarát: ");
            sugar = Console.ReadLine();
            r = int.Parse(sugar); //Számmá váltja
            Console.WriteLine("A/Az {0} sugarú kör kerülete: {1}", r, 2 * r * 3.14);
            Console.WriteLine("A/Az {0} sugarú kör területe: {1}", r, r * r * 3.14);
            - - - 
            
            - - - 
            int szülév;
            int dátum;
            string segéd;
            Console.WriteLine("Adja meg a születési évet");
            segéd = Console.ReadLine();
            szülév = int.Parse(segéd);
            Console.WriteLine("Adja meg az aktuális évszámot");
            segéd = Console.ReadLine();
            dátum = int.Parse(segéd);
            Console.WriteLine("Aki {0}-ban született, most {1} éves.", szülév, dátum - szülév);
            - - -
            
            - - -
            // TÉGLALAP
            int aoldal, boldal;
            Console.WriteLine("Adja meg a téglalap A oldalát!");
            aoldal = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Adja meg a téglalap B oldalát!");
            boldal = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("A(z) {0} és {1} oldalú téglalap Kerülete: {2}. Területe: {3}", aoldal, boldal, 2 * (aoldal + boldal), aoldal * boldal);
            - - - 
          
            - - -
            // HÁROMSZÖG Kerület
            int aoldal, boldal, coldal;
            Console.WriteLine("Első oldal");
            aoldal = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Második oldal");
            boldal = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Harmadik oldal");
            coldal = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("A {0} és {1} és {2} oldalú háromszög Kerülete: {3}", aoldal, boldal, coldal, aoldal + boldal + coldal);
            - - - 
            
            - - -
            // MAGASSÁG (if else)
            int magasság;
            Console.WriteLine("Adja meg a magasságát!");
            magasság = Convert.ToInt32(Console.ReadLine());
            if (magasság >= 180)
            {
                Console.WriteLine("Magas vagy.");
            }
            else
            {
                Console.WriteLine("Alacsony vagy.");
            }
            
            // VAGY...
            
            int magasság;
            string segéd;
            Console.WriteLine("Kérem adja meg magasságát!");
            segéd = Console.ReadLine();
            magasság = int.Parse(segéd);
            if (magasság >= 180)
            {
                Console.WriteLine("Magas vagy");
            }
            else
            {
                Console.WriteLine("Alacsony vagy");
            }
            - - -
            
            - - -
            //Háromszög három oldalának bekérése, háromszögegyenlőtlenség ellenőrzése

            double a, b, c;
            Console.WriteLine("Adja meg a háromszög egyik oldalát: ");
            a = Convert.ToDouble(Console.ReadLine());
            Console.WriteLine("Adja meg a háromszög második oldalát: ");
            b = Convert.ToDouble(Console.ReadLine());
            Console.WriteLine("Adja meg a háromszög harmadik oldalát: ");
            c = Convert.ToDouble(Console.ReadLine());
            if (a + b > c && a + c > b && b + c > a)
            {
                Console.WriteLine("A háromszög megszerkeszthető. Kerülete: {0}", a + b + c);
            }
            else
            {
                Console.WriteLine("A hsz. nem megszerkeszthető.");
            }
            - - - 
            
            - - - 
            string nev;
            int szülév, most;
            Console.WriteLine("Adja meg a nevét!");
            nev = Console.ReadLine();
            Console.WriteLine("Adja meg a születési évet!");
            szülév = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Adja meg a jelen évet!");
            most = Convert.ToInt32(Console.ReadLine());
            if (most - szülév > 30)
            {
                Console.Write(nev);
                Console.WriteLine("Old");
            }
            else
            {
                Console.Write(nev);
                Console.WriteLine("Young");
            }
            - - -
            
            - - - 
            // matek jegy bekérése és ahozzá tartozó szöveges értékelés kiíratása if-else -k egymásba ágyazása, ill. switc -case

            int jegy;
            Console.WriteLine("Kérem a jegyet: ");
            jegy = Convert.ToInt32(Console.ReadLine());
            if (jegy == 1)
            {
                Console.WriteLine("Elégtelen");
            }
            else if (jegy == 2)
            {
                Console.WriteLine("Elégésges");
            }
            else if (jegy == 3)
            {
                Console.WriteLine("Közepes");
            }
            else if (jegy == 4)
            {
                Console.WriteLine("Jó");
            }
            else if (jegy == 5)
            {
                Console.WriteLine("Jeles");
            }
            
            //VAGY...
            
            int jegy;
            Console.WriteLine("Adja meg a jegyét!");
            jegy = Convert.ToInt32(Console.ReadLine());
            switch (jegy)
            {
                case 1: Console.WriteLine("elégtelen"); break;
                case 2: Console.WriteLine("elégséges"); break;
                case 3: Console.WriteLine("közepes"); break;
                case 4: Console.WriteLine("yo"); break;
                case 5: Console.WriteLine("fasza"); break;
                default: Console.WriteLine("Nincs ilyen jegy"); break;
            }
            - - -
            
            - - -
            int i = 0;
            while (i < 10)
            {
                Console.WriteLine("Kata"); //10x leírja, hogy Kata
                i++;
            }
            - - - 
            
            - - -
             int i = 1;
            do
            {
                Console.WriteLine("KATA"); //10x kiírja, hogy Kata
                i++;
            }
            while (i < 10);
            - - -
            //számítsuk ki az első 100 szám összegét
            int szum = 0;
            for (int i = 1; i < 101; i++)
            {
                szum = szum + i;
            }
            Console.WriteLine("Az első 100 szám összege: {0}", szum);
            - - - 
            
            - - -
            //elöltesztelő ciklus
            int i = 0;
            while (i < 10)
            {
                Console.WriteLine("Kata");
                i++;
            }
            - - -
            
            - - -
            //hátultesztelő ciklus
            int i = 1;
            do
            {
                Console.WriteLine("Kata");
                i++;
            }
            while (i < 10);
            - - -
            
            - - -
            
            //Számtani sorozat alsó, felső határának bekérése, összegének kiszámítása.
            int also, felso;
            Console.WriteLine("Adja meg a sorozat alsó és felső határait!");
            also = int.Parse(Console.ReadLine());
            felso = int.Parse(Console.ReadLine());
            int szum = 0, i;
            for (i = also; i <= felso; i++)
            {
                szum = szum + i;
            }
            Console.WriteLine("A sorozat tagjainak összege: {0}", szum);
    
            - - -
    
            //Számítsuk ki egy bekért szám faktoriálisát.
            int szam;
            double fakt = 1;
            Console.WriteLine("Adjon meg egy számot!");
            szam = Convert.ToInt32(Console.ReadLine());
            for (int i = 2
                ; i <= szam; i++)
            {
                fakt = fakt * i;
            }
            Console.WriteLine("A/z {0} faktoriálisa: {1}", szam, fakt);
            - - -
            
            - - -
            //Határozzuk meg mennyi valódi osztója van a bekért számnak. Írjuk ki, hogy primszám, vagy nem
            //prímszám a megadott szám.

            int szam, oszt = 0;
            Console.WriteLine("Adjon meg egy számot!");
            szam = Convert.ToInt32(Console.ReadLine());
            for (int i = 2; i <= szam / 2; i++)
            {
                if (szam % i == 0) oszt++;
            }
            Console.WriteLine("{0} valódi osztóinak száma: {1}", szam, oszt);
            if (oszt == 0)
                Console.WriteLine("A szám prímszám.");
            else Console.WriteLine("A szám nem prímszám.");
            - - - 
            
            - - -
            //Határozzuk meg heti átlaghőmérsékletet.
            int homerseklet, ossz = 1;
            for (int i = 1; i < 8; i++)
            {
                Console.WriteLine("Adja meg a/z {0}. napi hőmérsékletet!", i);
                homerseklet = int.Parse(Console.ReadLine());
                ossz = ossz + homerseklet;
            }
            Console.WriteLine("A heti átlaghőmérséklet: {0}", (float)ossz / 7);
            - - -
            
            - - -
